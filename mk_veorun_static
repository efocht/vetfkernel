#!/bin/bash

#
# Usage:
#       
#

VEORUN=$1
shift

LIBS=
while test x$1 != x -a x$1 != "x--"
do
    LIBS="${LIBS} $1"
    shift
done
shift
EXTRA_LIBS="$*"

#echo "LIBS=$LIBS"
#echo "EXTRA_LIBS=$EXTRA_LIBS"

if [ "$VEORUN" = "-h" -o "$VEORUN" = "--help" -o -z "$VEORUN" -o -z "$LIBS" ]; then
    echo "Usage:"
    echo
    echo "$0 <VEORUN_BIN> <lib1.a> [<lib2.a> ...]"
    echo
    exit 0
fi

NM=${NM:-nm}
CC=${CC:-/opt/nec/ve/bin/ncc}
CXX=${CXX:-/opt/nec/ve/bin/nc++}
LD=${LD:-/opt/nec/ve/bin/nld}
CFLAGS=${CFLAGS:-}

EXT_FILE=`mktemp /tmp/veo.extXXXXXXXX`
DEF_FILE=`mktemp /tmp/veo.defXXXXXXXX`
SRC_FILE=`mktemp /tmp/veorunXXXXXXX.c`
OBJ_FILE=`mktemp /tmp/veorunXXXXXXX.o`

head() {
    local SIZE=$1
    echo "#include <stdlib.h>"
    echo "#include <string.h>"
    echo "typedef unsigned long ulong;"
    echo
    cat $EXT_FILE
    echo
    echo "typedef struct { char *n; ulong v; } SYM;"
    echo "SYM *_veo_static_symtable = NULL;"
    echo
    echo "void _init_static_symtable(void) {"
    echo "  int i = 0;"
    echo "  _veo_static_symtable = (SYM *)malloc((${SIZE}+1) * sizeof(SYM));"
    echo "  SYM *s = _veo_static_symtable;"
    echo 
}

tail() {
    echo "  s[i].n = NULL; s[i++].v = 0UL;"
    echo "}"
}

entry() {
    local NAME=$1
    echo "  s[i].n = strdup(\"${NAME}\"); s[i++].v = (ulong)&${NAME};"
}

ext() {
    local NAME=$1
    echo "extern ulong ${NAME};"
}

SIZE=0
for LIB in $LIBS; do
    if [ ! -f "$LIB" ]; then
        continue
    fi
    for NAME in `$NM $LIB |
                 egrep -so ' [TDuGSBARC] .*$' |
                 cut -d " " -f 3`; do
        entry $NAME >> $DEF_FILE
        ext $NAME >> $EXT_FILE
        SIZE=$((SIZE+1))
    done
done
head $SIZE > $SRC_FILE
cat $DEF_FILE >> $SRC_FILE
tail >> $SRC_FILE


$CC $CFLAGS -c $SRC_FILE -o $OBJ_FILE

#echo $CXX $CFLAGS -o $VEORUN $OBJ_FILE $LIBS /opt/nec/ve/lib/libveorun.a $EXTRA_LIBS
#$CXX $CFLAGS -v -o $VEORUN $OBJ_FILE $LIBS /opt/nec/ve/lib/libveorun.a $EXTRA_LIBS \
#    && echo "created specific $VEORUN"

# temprary call nld directory to remove libraries for veperf
${LD} /opt/nec/ve/lib/crt1.o /opt/nec/ve/lib/crti.o -z max-page-size=0x4000000 -warn-once -L/opt/nec/ve/ncc/2.1.27/lib -L/opt/nec/ve/lib/gcc -L/opt/nec/ve/lib -L/opt/nec/ve/lib/gcc -u __adv_ctrl -u __veproginf_p_ctrl -u __veperfcnt_ctrl -u __nec_start_threads -o veorun_tf ${OBJ_FILE} src/libvetfkernel.a /opt/nec/ve/lib/libveorun.a /opt/nec/ve/nlc/1.0.0/lib/libblas_sequential.a /opt/nec/ve/nlc/1.0.0/lib/libasl_sequential.a /opt/nec/nosupport/llvm-ve-1.0.1/lib/clang/9.0.0/lib/linux/libclang_rt.builtins-ve.a libs/vednn/src/libvednn_openmp.a -lveio --enable-new-dtags -rpath=/opt/nec/ve/ncc/2.1.27/lib -lnc++ -lvastfp -lvastfp -lncc -lsysve -ldl -lpthread -lm -lc -lncc -lgcc /opt/nec/ve/lib/crtn.o

rm -f $EXT_FILE $DEF_FILE $SRC_FILE $OBJ_FILE
